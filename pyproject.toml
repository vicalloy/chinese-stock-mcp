[project]
name = "chinese-stock-mcp"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastmcp>=2.10.5",
    "pysnowball>=0.1.5",
]

[tool.uv]
package = true

[[tool.uv.index]]
name = "bfsu"
url = "https://mirrors.bfsu.edu.cn/pypi/web/simple/"

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
]

[tool.mypy]
files = ["lakitu", ]
ignore_missing_imports = true
no_implicit_optional = false
python_version = '3.12'

[tool.ruff]
force-exclude = true
target-version = "py312"
[tool.ruff.lint]
select = [
    #    "A",  # flake8-builtins
    #    "ANN",  # flake8-annotations
    #    "ARG",  # flake8-unused-arguments
    "B",  # flake8-bugbear
    #    "BLE",  # flake8-blind-except
    "C",  # flake8-comprehensions
    #    "D",  # pydocstyle
    "E",  # pycodestyle errors
    #    "ERA",  # eradicate
    "F",  # pyflakes
    #    "FBT",  # flake8-boolean-trap
    "I",  # isort
    "ICN",  # flake8-import-conventions
    "N",  # pep8-naming
    #    "PGH",  # pygrep-hooks
    "PLC", "PLE", "PLR", "PLW",  # Pylint
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    #    "RUF",  # Ruff-specific rules
    #    "S",  # flake8-bandit
    #    "T",  # flake8-debugger
    #    "TID",  # flake8-tidy-imports
    "UP", # pyupgrade
    "W",  # pycodestyle warnings
]
ignore = [
    "C901",  # too complex
    "B905",  # `zip()` without an explicit `strict=` parameter
    "RET504",  # Unnecessary variable assignment before `return` statement
    "PLR2004",  # Magic value used in comparison
]

[tool.ruff.lint.isort]
known-first-party = ["chinese_stock_mcp"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[project.scripts]
chinese-stock-mcp = "chinese_stock_mcp.server:main"
